service: cohor-backend
frameworkVersion: "3.40.0"

configValidationMode: error

provider:
  name: aws
  runtime: nodejs20.x
  region: ${self:custom.region}
  stage: local
  environment:
    ENVIRONMENT: ${self:custom.environment.ENVIRONMENT.${self:custom.stage}}
    COHOR_APPLICATION_FRONTEND_ORIGINS: ${self:custom.environment.COHOR_APPLICATION_FRONTEND_ORIGINS.${self:custom.stage}}
    COHOR_API_GATEWAY_ENDPOINT_URI: ${self:custom.environment.COHOR_API_GATEWAY_ENDPOINT_URI.${self:custom.stage}}

custom:
  artifact: "Cohor"
  environment: ${file(./src/main/serverless/configuration/Environment.yaml)}
  region: "us-east-1"
  stage: ${opt:stage, self:provider.stage}
  roleAuthorizer:
    name: RoleAuthorizer
    identitySource: method.request.header.authorization
    resultTtlInSeconds: 0
    type: request
  serverless-offline:
    httpPort: ${env:SERVERLESS_OFFLINE_HTTP_PORT, 3000}
    websocketPort: ${env:SERVERLESS_OFFLINE_WEBSOCKET_PORT, 3001}
    noPrependStageInUrl: true
    reloadHandler: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  - ${file(./src/main/authorization/RoleAuthorizerFunction.yaml)}
  - ${file(./src/main/serverless/functions/ExampleFunction.yaml)}
  - ${file(./src/main/serverless/functions/auth/LoginFunction.yaml)}
  - ${file(./src/main/serverless/functions/auth/RegisterFunction.yaml)}
  - ${file(./src/main/serverless/functions/auth/ValidateAccountFunction.yaml)}

useDotenv: true
